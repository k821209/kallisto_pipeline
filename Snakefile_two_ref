

COND       = "NitrogenDef0hr"
SRRIDs     = [x.strip() for x in open('data/%s'%COND).readlines()]
SRATK      = "/programs/sratoolkit.2.7.0-ubuntu64/bin/"
OUTDIR_1   = "%s_v5.5"%COND
OUTDIR_2   = "%s_V1.1"%COND
INDEX_1    = "ref/Creinhardtii_281_v5.5.cds_primaryTranscriptOnly" # kallisto index
INDEX_2    = "ref/Cre.V1.1.cds" 
KALLPATH   = "/programs/kallisto_linux-v0.43.0/"

rule end:
     input : "{out}/abundance.tsv".format(out=OUTDIR_1),"{out}/abundance.tsv".format(out=OUTDIR_2)

rule NCBIdownload:
     params : "{SRRID}",SRRID=SRRIDs
     output : "{SRRID}.sra"
     shell  : "python2.7 ncbi_download.py {params}"

rule fastqdump:
     input  : "{SRRID}.sra"
     output : "data/{SRRID}_1.fastq.gz","data/{SRRID}_2.fastq.gz" # paired_end
     params : cmd=SRATK
     shell  : '''{params.cmd}fastq-dump  --origfmt -I  --split-files --gzip {input}
                 mv {wildcards.SRRID}_?.fastq.gz data/
                 rm {input}'''

rule kallidos_1:
     input  :
              fastq=expand("data/{SRRID}_{replicate}.fastq.gz",SRRID=SRRIDs,replicate=[1,2])
     params : ix=INDEX_1, cmd=KALLPATH, outdir=OUTDIR_1
     output : "{out}/abundance.tsv".format(out=OUTDIR_1)
     shell  : '''{params.cmd}kallisto quant -i {params.ix} -o {params.outdir} {input.fastq}
              '''     
rule kallidos_2:
     input  :
              fastq=expand("data/{SRRID}_{replicate}.fastq.gz",SRRID=SRRIDs,replicate=[1,2])
     params : ix=INDEX_2, cmd=KALLPATH, outdir=OUTDIR_2
     output : "{out}/abundance.tsv".format(out=OUTDIR_2)
     shell  : '''{params.cmd}kallisto quant -i {params.ix} -o {params.outdir} {input.fastq}
              '''



